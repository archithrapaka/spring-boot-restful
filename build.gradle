buildscript {
	ext {
		springBootVersion = '1.3.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.springframework:springloaded:1.2.5.RELEASE'
		classpath('se.transmode.gradle:gradle-docker:1.2')

	}
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'


jar {
	baseName = 'spring-boot-restful'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "http://sndyuk.github.com/maven" }
}


dependencies {
	compile('io.prometheus:simpleclient:0.0.13')
	compile('io.prometheus:simpleclient_common:0.0.13')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile("org.springframework.boot:spring-boot-starter-actuator")
	compile('org.codehaus.groovy:groovy')
	compile('org.fluentd:fluent-logger:0.3.2')
	compile('com.sndyuk:logback-more-appenders:1.1.0')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

idea {
	module {
		inheritOutputDirs = false
		outputDir = file("$buildDir/classes/main/")
	}
}


task wrapper(type: Wrapper) {
	gradleVersion = '2.10'
}

apply plugin: 'docker'


task buildDocker(type: Docker, dependsOn: build) {
	push = false
	applicationName = "monkey-codes/${jar.baseName}"
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}

import groovy.json.JsonSlurper
task generateData

(0..99).each { id ->
	task "generateUser$id" << {
		def slurper = new JsonSlurper()
		def randomUser = slurper.parseText(new URL('https://randomuser.me/api/?nat=au').text).results[0].user
		exec {
			executable "curl"
			args "-s", '-X','POST','-H','Content-Type:application/json','-d',"{\"firstName\": \"$randomUser.name.first\", \"lastName\": \"$randomUser.name.last\"}", 'http://192.168.99.100/people'
		}
	}
	generateData.dependsOn "generateUser$id"

}
